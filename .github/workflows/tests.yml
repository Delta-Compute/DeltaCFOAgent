name: Tests

# Phase 0: Basic test workflow
# Runs on all pushes and pull requests

on:
  push:
    branches: [ main, develop, claude/**, feature/** ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    # PostgreSQL service for testing
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: test_user
          POSTGRES_PASSWORD: test_password
          POSTGRES_DB: delta_cfo
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        cache: 'pip'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements-test.txt

    - name: Set up test database
      env:
        PGPASSWORD: test_password
      run: |
        # Create tables in test database
        psql -h localhost -U test_user -d delta_cfo -f postgres_unified_schema.sql || echo "Schema creation failed, may already exist"

    - name: Run tests
      env:
        DB_TYPE: postgresql
        DB_HOST: localhost
        DB_PORT: 5432
        DB_NAME: delta_cfo
        DB_USER: test_user
        DB_PASSWORD: test_password
        TEST_DB_NAME: delta_cfo
        TEST_DB_HOST: localhost
        TEST_DB_PORT: 5432
        TEST_DB_USER: test_user
        TEST_DB_PASSWORD: test_password
        ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
      run: |
        pytest tests/ -v --tb=short

    - name: Run tests with coverage
      if: success()
      env:
        DB_TYPE: postgresql
        DB_HOST: localhost
        DB_PORT: 5432
        DB_NAME: delta_cfo
        DB_USER: test_user
        DB_PASSWORD: test_password
        TEST_DB_NAME: delta_cfo
        TEST_DB_HOST: localhost
        TEST_DB_PORT: 5432
        TEST_DB_USER: test_user
        TEST_DB_PASSWORD: test_password
        ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
      run: |
        pytest tests/ --cov=. --cov-report=term --cov-report=xml

    - name: Upload coverage report
      if: success()
      uses: actions/upload-artifact@v3
      with:
        name: coverage-report
        path: coverage.xml

    - name: Comment coverage on PR
      if: github.event_name == 'pull_request' && success()
      uses: py-cov-action/python-coverage-comment-action@v3
      with:
        GITHUB_TOKEN: ${{ github.token }}
        MINIMUM_GREEN: 60
        MINIMUM_ORANGE: 40

  # Phase 0: Just run smoke tests
  smoke-test:
    runs-on: ubuntu-latest
    timeout-minutes: 5

    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: test_user
          POSTGRES_PASSWORD: test_password
          POSTGRES_DB: delta_cfo
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        cache: 'pip'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements-test.txt

    - name: Set up test database
      env:
        PGPASSWORD: test_password
      run: |
        psql -h localhost -U test_user -d delta_cfo -f postgres_unified_schema.sql || echo "Schema creation may have warnings"

    - name: Run smoke tests only
      env:
        DB_TYPE: postgresql
        DB_HOST: localhost
        DB_PORT: 5432
        DB_NAME: delta_cfo
        DB_USER: test_user
        DB_PASSWORD: test_password
      run: |
        pytest tests/ -v -m smoke --tb=short
